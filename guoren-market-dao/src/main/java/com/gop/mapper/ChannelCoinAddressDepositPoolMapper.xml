<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gop.mapper.ChannelCoinAddressDepositPoolMapper">
	<resultMap id="BaseResultMap" type="com.gop.domain.ChannelCoinAddressDepositPool">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="uid" property="uid" jdbcType="INTEGER" />
		<result column="asset_code" property="assetCode" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="coin_address" property="coinAddress" jdbcType="VARCHAR" />
		<result column="wallet_account" property="walletAccount"
			jdbcType="VARCHAR" />
		<result column="address_status" property="addressStatus"
			jdbcType="CHAR" />
		<result column="del_flag" property="delFlag" jdbcType="CHAR" />
		<result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
		<result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, uid, asset_code, name, coin_address, wallet_account,
		address_status,
		del_flag,
		create_date, update_date
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from channel_coin_address_deposit_pool
		where id =
		#{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		channel_coin_address_deposit_pool
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.gop.domain.ChannelCoinAddressDepositPool">
		insert into
		channel_coin_address_deposit_pool (id, uid, asset_code,
		name,
		coin_address,wallet_account, address_status,
		del_flag, create_date,
		update_date
		)
		values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER},
		#{assetCode,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR},
		#{coinAddress,jdbcType=VARCHAR},
		#{walletAccount,jdbcType=VARCHAR},#{addressStatus,jdbcType=CHAR},
		#{delFlag,jdbcType=CHAR}, #{createDate,jdbcType=TIMESTAMP},
		#{updateDate,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.gop.domain.ChannelCoinAddressDepositPool">
		insert into channel_coin_address_deposit_pool
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="uid != null">
				uid,
			</if>
			<if test="assetCode != null">
				asset_code,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="coinAddress != null">
				coin_address,
			</if>
			<if test="walletAccount != null">
				wallet_account,
			</if>
			<if test="addressStatus != null">
				address_status,
			</if>
			<if test="delFlag != null">
				del_flag,
			</if>
			<if test="createDate != null">
				create_date,
			</if>
			<if test="updateDate != null">
				update_date,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="uid != null">
				#{uid,jdbcType=INTEGER},
			</if>
			<if test="assetCode != null">
				#{assetCode,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="coinAddress != null">
				#{coinAddress,jdbcType=VARCHAR},
			</if>
			<if test="walletAccount != null">
				#{walletAccount,jdbcType=VARCHAR},
			</if>
			
			<if test="addressStatus != null">
				#{addressStatus,jdbcType=CHAR},
			</if>
			<if test="delFlag != null">
				#{delFlag,jdbcType=CHAR},
			</if>
			<if test="createDate != null">
				#{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="updateDate != null">
				#{updateDate,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.gop.domain.ChannelCoinAddressDepositPool">
		update channel_coin_address_deposit_pool
		<set>
			<if test="uid != null">
				uid = #{uid,jdbcType=INTEGER},
			</if>
			<if test="assetCode != null">
				asset_code = #{assetCode,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="coinAddress != null">
				coin_address = #{coinAddress,jdbcType=VARCHAR},
			</if>
			<if test="walletAccount != null">
				wallet_account = #{walletAccount,jdbcType=VARCHAR},
			</if>
			<if test="addressStatus != null">
				address_status = #{addressStatus,jdbcType=CHAR},
			</if>
			<if test="delFlag != null">
				del_flag = #{delFlag,jdbcType=CHAR},
			</if>
			<if test="createDate != null">
				create_date = #{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="updateDate != null">
				update_date = #{updateDate,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.gop.domain.ChannelCoinAddressDepositPool">
		update
		channel_coin_address_deposit_pool
		set uid = #{uid,jdbcType=INTEGER},
		asset_code = #{assetCode,jdbcType=VARCHAR},
		name =
		#{name,jdbcType=VARCHAR},
		coin_address =
		#{coinAddress,jdbcType=VARCHAR},
		wallet_account =
		#{walletAccount,jdbcType=VARCHAR},
		address_status =
		#{addressStatus,jdbcType=CHAR},
		del_flag = #{delFlag,jdbcType=CHAR},
		create_date = #{createDate,jdbcType=TIMESTAMP},
		update_date =
		#{updateDate,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>


	<!-- 自定义方法 -->
	<select id="selectUsefulAddress" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from channel_coin_address_deposit_pool
		where del_flag = 'false' and
		address_status = 'new' and asset_code = #{assetCode}
		limit 1
	</select>

	<select id="selectForUpdate" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from channel_coin_address_deposit_pool
		where id =
		#{id,jdbcType=INTEGER}
		for update
	</select>
	<select id="selectByAssetCodeAndAddressStatus" resultType="java.lang.Integer">
		select
		count(1)
		from channel_coin_address_deposit_pool
		where
		asset_code = #{assetCode}
		and
		address_status = #{status}
	</select>
	<select id="selectByUidAndAssetCode" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from channel_coin_address_deposit_pool
		where uid = #{uid,jdbcType=INTEGER}
		and asset_code = #{assetCode,jdbcType=VARCHAR}
	</select>
	<select id="selectByCoinAddress" resultMap="BaseResultMap">
	select
	<include refid="Base_Column_List" />
	from channel_coin_address_deposit_pool
	where coin_address =
	#{coinAddress,jdbcType=VARCHAR} and address_status = 'USED'
</select>
</mapper>