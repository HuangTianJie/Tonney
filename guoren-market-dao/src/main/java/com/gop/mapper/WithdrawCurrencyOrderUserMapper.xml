<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gop.mapper.WithdrawCurrencyOrderUserMapper">
	<resultMap id="BaseResultMap" type="com.gop.domain.WithdrawCurrencyOrderUser">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="uid" property="uid" jdbcType="INTEGER" />
		<result column="broker_id" property="brokerId" jdbcType="INTEGER" />
		<result column="account_id" property="accountId" jdbcType="INTEGER" />
		<result column="account" property="account" jdbcType="VARCHAR" />
		<result column="asset_code" property="assetCode" jdbcType="VARCHAR" />
		<result column="channel_withdraw_id" property="channelWithdrawId"
			jdbcType="INTEGER" />
		<result column="admin_id" property="adminId" jdbcType="INTEGER" />
		<result column="money" property="money" jdbcType="DECIMAL" />
		<result column="pay" property="pay" jdbcType="DECIMAL" />
		<result column="fee" property="fee" jdbcType="DECIMAL" />
		<result column="inner_order_no" property="innerOrderNo"
			jdbcType="CHAR" />
		<result column="outer_order_no" property="outerOrderNo"
			jdbcType="CHAR" />
		<result column="acnumber" property="acnumber" jdbcType="VARCHAR" />
		<result column="bank" property="bank" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="CHAR" />
		<result column="pay_mode" property="payMode" jdbcType="VARCHAR" />
		<result column="msg" property="msg" jdbcType="CHAR" />
		<result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
		<result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, uid, broker_id,account_id, account,asset_code,
		channel_withdraw_id,
		admin_id, money,
		pay, fee,
		inner_order_no,outer_order_no, acnumber, bank,
		name, status, pay_mode,
		msg, create_date, update_date
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from withdraw_currency_order_user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		withdraw_currency_order_user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.gop.domain.WithdrawCurrencyOrderUser">
		insert into
		withdraw_currency_order_user (id, uid, broker_id,account_id, account,
		asset_code,
		channel_withdraw_id, admin_id,
		money, pay, fee,
		inner_order_no,outer_order_no,
		acnumber, bank,
		name,
		status, pay_mode,
		msg, create_date,
		update_date)
		values
		(#{id,jdbcType=INTEGER},
		#{uid,jdbcType=INTEGER},
		#{brokerId,jdbcType=INTEGER},
		#{accountId,jdbcType=INTEGER},
		#{account,jdbcType=VARCHAR},
		#{assetCode,jdbcType=VARCHAR},
		#{channelWithdrawId,jdbcType=INTEGER},
		#{adminId,jdbcType=INTEGER},
		#{money,jdbcType=DECIMAL},
		#{pay,jdbcType=DECIMAL},
		#{fee,jdbcType=DECIMAL},
		#{innerOrderNo,jdbcType=CHAR},
		#{outerOrderNo,jdbcType=CHAR},
		#{acnumber,jdbcType=VARCHAR}, #{bank,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR},
		#{status,jdbcType=CHAR},
		#{payMode,jdbcType=VARCHAR}, #{msg,jdbcType=CHAR},
		#{createDate,jdbcType=TIMESTAMP},
		#{updateDate,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.gop.domain.WithdrawCurrencyOrderUser"  useGeneratedKeys="true" keyProperty="id">
		insert into withdraw_currency_order_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="uid != null">
				uid,
			</if>
			<if test="brokerId != null">
				broker_id,
			</if>
			<if test="accountId != null">
				account_id,
			</if>
			<if test="account != null">
				account,
			</if>
			<if test="assetCode != null">
				asset_code,
			</if>
			<if test="channelWithdrawId != null">
				channel_withdraw_id,
			</if>
			<if test="adminId != null">
				admin_id,
			</if>
			<if test="money != null">
				money,
			</if>
			<if test="pay != null">
				pay,
			</if>
			<if test="fee != null">
				fee,
			</if>
			<if test="outerOrderNo != null">
				outer_order_no,
			</if>
			<if test="innerOrderNo != null">
				inner_order_no,
			</if>
			<if test="acnumber != null">
				acnumber,
			</if>
			<if test="bank != null">
				bank,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="payMode != null">
				pay_mode,
			</if>
			<if test="msg != null">
				msg,
			</if>
			<if test="createDate != null">
				create_date,
			</if>
			<if test="updateDate != null">
				update_date,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="uid != null">
				#{uid,jdbcType=INTEGER},
			</if>
			<if test="brokerId != null">
				#{brokerId,jdbcType=INTEGER},
			</if>
			<if test="accountId != null">
				#{accountId,jdbcType=INTEGER},
			</if>
			<if test="account != null">
				#{account,jdbcType=VARCHAR},
			</if>
			<if test="assetCode != null">
				#{assetCode,jdbcType=VARCHAR},
			</if>
			<if test="channelWithdrawId != null">
				#{channelWithdrawId,jdbcType=INTEGER},
			</if>
			<if test="adminId != null">
				#{adminId,jdbcType=INTEGER},
			</if>
			<if test="money != null">
				#{money,jdbcType=DECIMAL},
			</if>
			<if test="pay != null">
				#{pay,jdbcType=DECIMAL},
			</if>
			<if test="fee != null">
				#{fee,jdbcType=DECIMAL},
			</if>
			<if test="outerOrderNo != null">
				#{outerOrderNo,jdbcType=CHAR},
			</if>
			<if test="innerOrderNo != null">
				#{innerOrderNo,jdbcType=CHAR},
			</if>
			<if test="acnumber != null">
				#{acnumber,jdbcType=VARCHAR},
			</if>
			<if test="bank != null">
				#{bank,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=CHAR},
			</if>
			<if test="payMode != null">
				#{payMode,jdbcType=VARCHAR},
			</if>
			<if test="msg != null">
				#{msg,jdbcType=CHAR},
			</if>
			<if test="createDate != null">
				#{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="updateDate != null">
				#{updateDate,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.gop.domain.WithdrawCurrencyOrderUser">
		update withdraw_currency_order_user
		<set>
			<if test="uid != null">
				uid = #{uid,jdbcType=INTEGER},
			</if>
			<if test="brokerId != null">
				broker_id = #{brokerId,jdbcType=INTEGER},
			</if>
			<if test="accountId != null">
				account_id = #{accountId,jdbcType=INTEGER},
			</if>
			<if test="account != null">
				account = #{account,jdbcType=VARCHAR},
			</if>
			<if test="assetCode != null">
				asset_code = #{assetCode,jdbcType=VARCHAR},
			</if>
			<if test="channelWithdrawId != null">
				channel_withdraw_id =
				#{channelWithdrawId,jdbcType=INTEGER},
			</if>
			<if test="adminId != null">
				admin_id = #{adminId,jdbcType=INTEGER},
			</if>
			<if test="money != null">
				money = #{money,jdbcType=DECIMAL},
			</if>
			<if test="pay != null">
				pay = #{pay,jdbcType=DECIMAL},
			</if>
			<if test="fee != null">
				fee = #{fee,jdbcType=DECIMAL},
			</if>
			<if test="outerOrderNo != null">
				outer_order_no = #{outerOrderNo,jdbcType=CHAR},
			</if>
			<if test="innerOrderNo != null">
				inner_order_no = #{innerOrderNo,jdbcType=CHAR},
			</if>
			<if test="acnumber != null">
				acnumber = #{acnumber,jdbcType=VARCHAR},
			</if>
			<if test="bank != null">
				bank = #{bank,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=CHAR},
			</if>
			<if test="payMode != null">
				pay_mode = #{payMode,jdbcType=VARCHAR},
			</if>
			<if test="msg != null">
				msg = #{msg,jdbcType=CHAR},
			</if>
			<if test="createDate != null">
				create_date = #{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="updateDate != null">
				update_date = #{updateDate,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.gop.domain.WithdrawCurrencyOrderUser">
		update
		withdraw_currency_order_user
		set uid = #{uid,jdbcType=INTEGER},
		broker_id = #{brokerId,jdbcType=INTEGER},
		account_id =
		#{accountId,jdbcType=INTEGER},
		account = #{account,jdbcType=VARCHAR},
		asset_code =
		#{assetCode,jdbcType=VARCHAR},
		channel_withdraw_id =
		#{channelWithdrawId,jdbcType=INTEGER},
		admin_id =
		#{adminId,jdbcType=INTEGER},
		money = #{money,jdbcType=DECIMAL},
		pay =
		#{pay,jdbcType=DECIMAL},
		fee = #{fee,jdbcType=DECIMAL},
		outer_order_no =
		#{outerOrderNo,jdbcType=CHAR},
		inner_order_no =
		#{innerOrderNo,jdbcType=CHAR},
		acnumber = #{acnumber,jdbcType=VARCHAR},
		bank =
		#{bank,jdbcType=VARCHAR},
		name = #{name,jdbcType=VARCHAR},
		status
		=
		#{status,jdbcType=CHAR},
		pay_mode = #{payMode,jdbcType=VARCHAR},
		msg =
		#{msg,jdbcType=CHAR},
		create_date = #{createDate,jdbcType=TIMESTAMP},
		update_date = #{updateDate,jdbcType=TIMESTAMP}
		where id =
		#{id,jdbcType=INTEGER}
	</update>

	<!-- 自定义方法 -->


	<select id="selectForUpdate" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from withdraw_currency_order_user
		where id = #{id,jdbcType=INTEGER}
		for
		update
	</select>

	<select id="selectByTxIdForUpdate" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from withdraw_currency_order_user
		where id = (select id from
		withdraw_currency_order_user where inner_order_no =
		#{txid,jdbcType=CHAR} )
		for
		update
	</select>


	<select id="selectByTxId" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from withdraw_currency_order_user
		where inner_order_no =
		#{txid,jdbcType=CHAR}
		for update
	</select>


	<select id="selectByUidAndOuterOrderNo" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from withdraw_currency_order_user
		where outer_order_no =
		#{outerOrderNo,jdbcType=CHAR}
		and uid = #{uid,jdbcType=INTEGER}
	</select>

	<select id="getUserOrdersByAsset" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from withdraw_currency_order_user
		where asset_code =
		#{assetCode,jdbcType=CHAR}
		and uid = #{uid,jdbcType=INTEGER}
	</select>
	
	<select id="selectByStatusAndPayMode" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from withdraw_currency_order_user
		where pay_mode =
		#{payMode,jdbcType=CHAR}
		and status = #{status,jdbcType=CHAR}
	</select>

	<select id="getWithdrawOrderList" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from withdraw_currency_order_user
		<where>
			<if test="brokerId != null">
				and broker_id = #{brokerId}
			</if>
			<if test="internalOrderId != null">
				and inner_order_no = #{internalOrderId}
			</if>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="uid != null">
				and uid = #{uid}
			</if>
			<if test="account != null">
				and account = #{account}
			</if>
			<if test="name != null">
				and name = #{name}
			</if>
			<if test="status != null">
				and status = #{status}
			</if>
			<if test="payMode != null">
				and pay_mode = #{pay_mode}
			</if>
		</where>
		order by id
	</select>


</mapper>