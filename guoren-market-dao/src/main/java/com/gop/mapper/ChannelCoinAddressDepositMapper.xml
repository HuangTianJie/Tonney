<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gop.mapper.ChannelCoinAddressDepositMapper">
	<resultMap id="BaseResultMap" type="com.gop.domain.ChannelCoinAddressDeposit">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="uid" property="uid" jdbcType="INTEGER" />
		<result column="asset_code" property="assetCode" jdbcType="VARCHAR" />
		<result column="deposit_pool_id" property="depositPoolId"
			jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="coin_address" property="coinAddress" jdbcType="VARCHAR" />
		<result column="del_flag" property="delFlag" jdbcType="CHAR" />
		<result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
		<result column="create_ip" property="createIp" jdbcType="CHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, uid, asset_code, deposit_pool_id, name, coin_address, del_flag,
		create_date,
		create_ip
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from channel_coin_address_deposit
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from channel_coin_address_deposit
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.gop.domain.ChannelCoinAddressDeposit">
		insert into channel_coin_address_deposit (id, uid, asset_code,
		deposit_pool_id, name, coin_address,
		del_flag, create_date, create_ip
		)
		values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER},
		#{assetCode,jdbcType=VARCHAR},
		#{depositPoolId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{coinAddress,jdbcType=VARCHAR},
		#{delFlag,jdbcType=CHAR}, #{createDate,jdbcType=TIMESTAMP},
		#{createIp,jdbcType=CHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.gop.domain.ChannelCoinAddressDeposit">
		insert into channel_coin_address_deposit
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="uid != null">
				uid,
			</if>
			<if test="assetCode != null">
				asset_code,
			</if>
			<if test="depositPoolId != null">
				deposit_pool_id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="coinAddress != null">
				coin_address,
			</if>
			<if test="delFlag != null">
				del_flag,
			</if>
			<if test="createDate != null">
				create_date,
			</if>
			<if test="createIp != null">
				create_ip,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="uid != null">
				#{uid,jdbcType=INTEGER},
			</if>
			<if test="assetCode != null">
				#{assetCode,jdbcType=VARCHAR},
			</if>
			<if test="depositPoolId != null">
				#{depositPoolId,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="coinAddress != null">
				#{coinAddress,jdbcType=VARCHAR},
			</if>
			<if test="delFlag != null">
				#{delFlag,jdbcType=CHAR},
			</if>
			<if test="createDate != null">
				#{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="createIp != null">
				#{createIp,jdbcType=CHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.gop.domain.ChannelCoinAddressDeposit">
		update channel_coin_address_deposit
		<set>
			<if test="uid != null">
				uid = #{uid,jdbcType=INTEGER},
			</if>
			<if test="assetCode != null">
				asset_code = #{assetCode,jdbcType=VARCHAR},
			</if>
			<if test="depositPoolId != null">
				deposit_pool_id = #{depositPoolId,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="coinAddress != null">
				coin_address = #{coinAddress,jdbcType=VARCHAR},
			</if>
			<if test="delFlag != null">
				del_flag = #{delFlag,jdbcType=CHAR},
			</if>
			<if test="createDate != null">
				create_date = #{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="createIp != null">
				create_ip = #{createIp,jdbcType=CHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.gop.domain.ChannelCoinAddressDeposit">
		update channel_coin_address_deposit
		set uid = #{uid,jdbcType=INTEGER},
		asset_code = #{assetCode,jdbcType=VARCHAR},
		deposit_pool_id = #{depositPoolId,jdbcType=INTEGER},
		name = #{name,jdbcType=VARCHAR},
		coin_address = #{coinAddress,jdbcType=VARCHAR},
		del_flag = #{delFlag,jdbcType=CHAR},
		create_date = #{createDate,jdbcType=TIMESTAMP},
		create_ip = #{createIp,jdbcType=CHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>



	<!-- 自定义方法 -->
	
	<select id="getAddress" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from channel_coin_address_deposit
		where 
		uid = #{uid,jdbcType=INTEGER}
		and del_flag = 'false'
		and asset_code = #{assetCode}
	</select>
	
	<select id="selectByAssetAndAddress" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from channel_coin_address_deposit
		where 
		coin_address = #{coinAddress}
		and del_flag = 'false'
		and asset_code = #{assetCode}
	</select>
	
	
	<select id="selectByAddressAndAssetCodeNotDel" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from channel_coin_address_deposit
		where
		coin_address = #{address,jdbcType=VARCHAR}
		and del_flag = 'false'
		and asset_code = #{assetCode,jdbcType=VARCHAR}
	</select>
	<select id="selectByAddressNotDel" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from channel_coin_address_deposit
		where
		coin_address = #{address,jdbcType=VARCHAR}
		and del_flag = 'false'
	</select>
	
	<select id="getAddressList" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from channel_coin_address_deposit
		where 
		uid = #{uid,jdbcType=INTEGER}
		and del_flag = 'false'
		<if test="assetCode != null">
			and asset_code = #{assetCode}
		</if>
	</select>
		<select id="getCollectionAddressList" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from channel_coin_address_deposit
		where  del_flag = 'false'
		<if test="assetCode != null">
			and asset_code = #{assetCode}
		</if>
	</select>
</mapper>