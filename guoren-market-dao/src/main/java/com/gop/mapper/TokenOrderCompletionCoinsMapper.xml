<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gop.mapper.TokenOrderCompletionCoinsMapper">
	<resultMap id="BaseResultMap" type="com.gop.domain.TokenOrderCompletionCoins">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="asset_name" property="assetName" jdbcType="VARCHAR" />
		<result column="completion_num" property="completionNum"
			jdbcType="DECIMAL" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<resultMap type="com.gop.mapper.dto.OrderRankOfCoinsNumDto"
		id="coinsNumResultMap">
		<result column="coinName" property="coinName" jdbcType="VARCHAR" />
		<result column="completeOrderNum" property="completeOrderNum"
			jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, asset_name, completion_num, create_time, update_time
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from token_order_completion_coins
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		token_order_completion_coins
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.gop.domain.TokenOrderCompletionCoins">
		insert into
		token_order_completion_coins (id, asset_name,
		completion_num,
		create_time, update_time)
		values (#{id,jdbcType=INTEGER},
		#{assetName,jdbcType=VARCHAR},
		#{completionNum,jdbcType=DECIMAL},
		#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.gop.domain.TokenOrderCompletionCoins">
		insert into token_order_completion_coins
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="assetName != null">
				asset_name,
			</if>
			<if test="completionNum != null">
				completion_num,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="assetName != null">
				#{assetName,jdbcType=VARCHAR},
			</if>
			<if test="completionNum != null">
				#{completionNum,jdbcType=DECIMAL},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
		<if test="completionNum != null">
			ON DUPLICATE KEY UPDATE
			completion_num = (completion_num + #{completionNum,jdbcType=DECIMAL})
		</if>
	</insert>
	<insert id="saveOrIncrOrderCompleted" parameterType="com.gop.domain.TokenOrderCompletionCoins">
		insert into
		token_order_completion_coins (asset_name,
		completion_num)
		values (
		#{assetName,jdbcType=VARCHAR},
		1)
		ON DUPLICATE KEY
		UPDATE
		completion_num = completion_num+1
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.gop.domain.TokenOrderCompletionCoins">
		update token_order_completion_coins
		<set>
			<if test="assetName != null">
				asset_name = #{assetName,jdbcType=VARCHAR},
			</if>
			<if test="completionNum != null">
				completion_num = #{completionNum,jdbcType=DECIMAL},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.gop.domain.TokenOrderCompletionCoins">
		update
		token_order_completion_coins
		set asset_name =
		#{assetName,jdbcType=VARCHAR},
		completion_num =
		#{completionNum,jdbcType=DECIMAL},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="selectByAssetName" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		where
		assetName = #{assetName}
	</select>
	<select id="getRankOfCoinsNum" resultMap="coinsNumResultMap">
		select asset_name as
		coinName,completion_num as completeOrderNum
		from
		token_order_completion_coins

	</select>
</mapper>