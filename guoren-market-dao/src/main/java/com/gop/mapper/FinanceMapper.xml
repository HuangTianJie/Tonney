<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gop.mapper.FinanceMapper">
	<resultMap id="BaseResultMap" type="com.gop.domain.Finance">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="uid" property="uid" jdbcType="INTEGER" />
		<result column="broker_id" property="brokerId" jdbcType="INTEGER" />
		<result column="account_no" property="accountNo" jdbcType="VARCHAR" />
		<result column="account_kind" property="accountKind" jdbcType="VARCHAR" />
		<result column="asset_code" property="assetCode" jdbcType="VARCHAR" />
		<result column="amount_available" property="amountAvailable" jdbcType="DECIMAL" />
		<result column="amount_lock" property="amountLock" jdbcType="DECIMAL" />
		<result column="amount_loan" property="amountLoan" jdbcType="DECIMAL" />
		<result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
		<result column="version" property="version" jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="financeAmountMap" type="com.gop.mapper.dto.FinanceAmountDto">
		<result column="assetCode" property="assetCode" jdbcType="VARCHAR" />
		<result column="amountAvailable" property="amountAvailable" jdbcType="DECIMAL" />
		<result column="amountLock" property="amountLock" jdbcType="DECIMAL" />
		<result column="amountTotal" property="amountTotal" jdbcType="DECIMAL" />
	</resultMap>
	<resultMap id="FinanceStatisticeMap" type="com.gop.domain.StatisticeResult">
		<result column="symbol" property="symbol" jdbcType="VARCHAR" />
		<result column="tradeNumber" property="tradeNumber" jdbcType="DECIMAL" />
	</resultMap>
	<sql id="Finance_Column_List">
		asset_code as symbol,sum(amount_available)+sum(amount_lock) as tradeNumber
	</sql>
	<sql id="Base_Column_List">
		id, uid,broker_id, account_no, account_kind, asset_code,
		amount_available,
		amount_lock, amount_loan,
		update_date, version
	</sql>
	<sql id="finance_join_Column_List">
		a.id, a.uid,a.broker_id, a.account_no, a.account_kind, a.asset_code,
		a.amount_available,
		a.amount_lock, a.amount_loan,
		a.update_date, a.version
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from finance
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		finance
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.gop.domain.Finance">
		insert into finance (id, uid, broker_id,
		account_no,
		account_kind, asset_code, amount_available,
		amount_lock,
		amount_loan, update_date,
		version)
		values (#{id,jdbcType=INTEGER},
		#{uid,jdbcType=INTEGER},
		#{brokerId,jdbcType=INTEGER},
		#{accountNo,jdbcType=VARCHAR},
		#{accountKind,jdbcType=VARCHAR}, #{assetCode,jdbcType=VARCHAR},
		#{amountAvailable,jdbcType=DECIMAL},
		#{amountLock,jdbcType=DECIMAL},
		#{amountLoan,jdbcType=DECIMAL},
		#{updateDate,jdbcType=TIMESTAMP},
		#{version,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.gop.domain.Finance">
		insert into finance
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="uid != null">
				uid,
			</if>
			<if test="brokerId != null">
				broker_id,
			</if>
			<if test="accountNo != null">
				account_no,
			</if>
			<if test="accountKind != null">
				account_kind,
			</if>
			<if test="assetCode != null">
				asset_code,
			</if>
			<if test="amountAvailable != null">
				amount_available,
			</if>
			<if test="amountLock != null">
				amount_lock,
			</if>
			<if test="amountLoan != null">
				amount_loan,
			</if>
			<if test="updateDate != null">
				update_date,
			</if>
			<if test="version != null">
				version,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="uid != null">
				#{uid,jdbcType=INTEGER},
			</if>
			<if test="brokerId != null">
				#{brokerId,jdbcType=INTEGER},
			</if>
			<if test="accountNo != null">
				#{accountNo,jdbcType=VARCHAR},
			</if>
			<if test="accountKind != null">
				#{accountKind,jdbcType=VARCHAR},
			</if>
			<if test="assetCode != null">
				#{assetCode,jdbcType=VARCHAR},
			</if>
			<if test="amountAvailable != null">
				#{amountAvailable,jdbcType=DECIMAL},
			</if>
			<if test="amountLock != null">
				#{amountLock,jdbcType=DECIMAL},
			</if>
			<if test="amountLoan != null">
				#{amountLoan,jdbcType=DECIMAL},
			</if>
			<if test="updateDate != null">
				#{updateDate,jdbcType=TIMESTAMP},
			</if>
			<if test="version != null">
				#{version,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.gop.domain.Finance">
		update finance
		<set>
			<if test="uid != null">
				uid = #{uid,jdbcType=INTEGER},
			</if>
			<if test="brokerId != null">
				broker_id = #{brokerId,jdbcType=INTEGER},
			</if>
			<if test="accountNo != null">
				account_no = #{accountNo,jdbcType=VARCHAR},
			</if>
			<if test="accountKind != null">
				account_kind = #{accountKind,jdbcType=VARCHAR},
			</if>
			<if test="assetCode != null">
				asset_code = #{assetCode,jdbcType=VARCHAR},
			</if>
			<if test="amountAvailable != null">
				amount_available = #{amountAvailable,jdbcType=DECIMAL},
			</if>
			<if test="amountLock != null">
				amount_lock = #{amountLock,jdbcType=DECIMAL},
			</if>
			<if test="amountLoan != null">
				amount_loan = #{amountLoan,jdbcType=DECIMAL},
			</if>
			<if test="updateDate != null">
				update_date = #{updateDate,jdbcType=TIMESTAMP},
			</if>
			<if test="version != null">
				version = #{version,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.gop.domain.Finance">
		update finance
		set
		uid = #{uid,jdbcType=INTEGER},
		broker_id = #{brokerId,jdbcType=INTEGER},
		account_no =
		#{accountNo,jdbcType=VARCHAR},
		account_kind =
		#{accountKind,jdbcType=VARCHAR},
		asset_code =
		#{assetCode,jdbcType=VARCHAR},
		amount_available =
		#{amountAvailable,jdbcType=DECIMAL},
		amount_lock =
		#{amountLock,jdbcType=DECIMAL},
		amount_loan =
		#{amountLoan,jdbcType=DECIMAL},
		update_date =
		#{updateDate,jdbcType=TIMESTAMP},
		version = #{version,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="getIdByUid" parameterType="java.lang.Integer"
		resultType="java.lang.Integer">
		select
		id
		from finance
		where uid = #{uid,jdbcType=INTEGER}
	</select>

	<!-- 自定义方法 -->
	<select id="selectByUidAndAssetCode" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from finance
		where uid = #{uid,jdbcType=INTEGER}
		and asset_code =
		#{assetCode,jdbcType=VARCHAR}
	</select>
	
	<select id="selectByUid" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from finance
		<if test="uid != null">
			where uid = #{uid,jdbcType=INTEGER}
		</if>
	</select>
	
	<select id="selectByBrokerId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from finance
		where 
			broker_id = #{brokerId,jdbcType=INTEGER}
			<if test="uid != null">
					and uid = #{uid,jdbcType=INTEGER}
			</if>
	</select>
	
	<select id="selectByAccountNo" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from finance
		where account_no = #{accountNo,jdbcType=VARCHAR}
	</select>

	<select id="selectIdByAccountNo" resultType="java.lang.Integer"
		parameterType="java.lang.Integer">
		select
		id
		from finance
		where account_no =
		#{accountNo,jdbcType=VARCHAR}
	</select>

	<select id="selectForUpdate" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from finance
		where id = #{id,jdbcType=INTEGER}
		for update
	</select>

	<update id="updateFinanceWithVersion" parameterType="com.gop.domain.Finance">
		update finance
		<set>
			<if test="amountAvailable != null">
				amount_available = #{amountAvailable,jdbcType=DECIMAL},
			</if>
			<if test="amountLock != null">
				amount_lock = #{amountLock,jdbcType=DECIMAL},
			</if>
			<if test="amountLoan != null">
				amount_loan = #{amountLoan,jdbcType=DECIMAL},
			</if>
			<if test="updateDate != null">
				update_date = #{updateDate,jdbcType=TIMESTAMP},
			</if>
			version=version + 1,
		</set>
		where
		id = #{id,jdbcType=INTEGER} and version=#{version}
	</update>

	<select id="selectByUidAndAssetCodeForUpdate" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from finance
		where id = (select id from finance where uid =
		#{uid,jdbcType=INTEGER}
		and asset_code = #{assetCode,jdbcType=VARCHAR})
		for update
	</select>
	
	<select id="queryTotalCountByAssetCode" resultMap="FinanceStatisticeMap">
		select
		<include refid="Finance_Column_List"/>
		from finance
		<where>
			<if test="assetCode != null">
				and asset_code = #{assetCode,jdbcType=VARCHAR}
			</if>
		</where>
		group by asset_code
	</select>

	<select id="getTotalAccountByAssetCode" resultMap="financeAmountMap">
		select asset_code as assetCode,
		sum(amount_available) as amountAvailable,
		sum(amount_lock) as amountLock,
		sum(amount_available) + sum(amount_lock) as amountTotal
		from finance
		where asset_code != ''
		<if test="assetCode != null">
			and asset_code = #{assetCode,jdbcType=VARCHAR}
		</if>
		group by asset_code
	</select>

	<select id="selectUserAccountList" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from finance
		<where>
			<if test="uid != null">
				and uid = #{uid,jdbcType=INTEGER}
			</if>
			<if test="assetCode != null">
				and asset_code = #{assetCode,jdbcType=VARCHAR}
			</if>
		</where>
	</select>
	<select id="selectUserAccountListByCurrencyType" resultMap="BaseResultMap">
		select
		<include refid="finance_join_Column_List" />
		from finance a left join config_asset b on  a.asset_code = b.asset_code
		<where>
			<if test="uid != null">
				and a.uid = #{uid,jdbcType=INTEGER}
			</if>
			<if test="currencyType != null">
				and b.currency_type = #{currencyType,jdbcType=CHAR}
			</if>
		</where>
	</select>
</mapper>